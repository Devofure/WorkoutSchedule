name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [29, 34]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            echo "Waiting for emulator to boot..."
            boot_completed=""
            retries=0
            timeout=1200  # 20 minutes
            while [[ -z "$boot_completed" && $retries -lt $timeout ]]; do
              boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
              if [[ -z "$boot_completed" ]]; then
                echo "Still waiting for emulator to boot..."
                adb shell getprop > getprop_output.txt
                sleep 1
                retries=$((retries + 1))
              else
                break
              fi
            done
            if [[ "$boot_completed" != "1" ]]; then
              echo "Emulator failed to boot within $timeout seconds"
              adb shell logcat -d > emulator_logcat.txt
              exit 1
            fi
            echo "Emulator booted successfully"
            adb shell input keyevent 82
            ./gradlew connectedCheck

      - name: Upload emulator logcat
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: emulator-logcat
          path: emulator_logcat.txt